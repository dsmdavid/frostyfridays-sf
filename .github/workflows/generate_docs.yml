name: refresh docs

on: 
  pull_request:
    branches: [main]
  workflow_dispatch:
    

jobs:

  generate_docs:
    name: run docs
    runs-on: ubuntu-latest

  # Set the environment variables needed for the run
    env:
      dvd_sf_db: ${{  secrets.DVD_SF_DB }} 
      dvd_sf_schema: ${{  secrets.DVD_SF_SCHEMA }} 
      dvd_sf_wh: ${{  secrets.DVD_FROSTY_WH }} 
      dvd_sf_user: ${{ secrets.DVD_SF_USER }}
      dvd_sf_role: ${{ secrets.DVD_SF_ROLE }}
      dvd_sf_account: ${{ secrets.DVD_SF_ACCOUNT }}
      dvd_sf_passphrase: ${{ secrets.DVD_SF_PASSPHRASE }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      AWS_EXPORT: ${{ secrets.AWS_EXPORT }}
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }} 
      AWS_EC2_METADATA_DISABLED: true

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: pk
        run: |
          pwd 
          echo "-----BEGIN ENCRYPTED PRIVATE KEY-----" >> ./rsa_key_david_sf.p8
          echo ${{ secrets.SSH_KEY }} >> ./rsa_key_david_sf.p8 
          echo "-----END ENCRYPTED PRIVATE KEY-----" >> ./rsa_key_david_sf.p8
          echo $AWS_EXPORT >> ./aws_export
          source ./aws_export 

      - name: install requirements
        run: "pip install -r requirements.txt"
      - name: install aws
        run: "sudo apt-get install -yqq awscli"
      - name: dbt docs generate
        run: |
          pwd
          source ./aws_export
          env
          echo "key"
          cat ./rsa_key_david_sf.p8 
          export DBT_PROFILES_DIR=$(pwd)/profiles
          echo "generating docs"
          dbt docs generate --target cicd
          echo "keeping only frosty"
          cp ./extra/change_manifest.py ./target
          cd target
          python change_manifest.py
          echo "uploading to s3"
          aws s3 cp ./output/manifest.json  s3://dvd-il-bucket-public/manifest.json
          aws s3 cp ./output/catalog.json  s3://dvd-il-bucket-public/catalog.json
          aws s3 cp ./index.html  s3://dvd-il-bucket-public/index.html
      - name: say gg
        run: |
          echo "we're done"

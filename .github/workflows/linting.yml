name: sqlfluff

on: 
  pull_request:
    branches: [main]
  workflow_dispatch:

# Set the environment variables needed for the run
env:
  dvd_sf_db: ${{  secrets.DVD_SF_DB }} 
  dvd_sf_schema: ${{  secrets.DVD_SF_SCHEMA }} 
  dvd_sf_wh: ${{  secrets.DVD_FROSTY_WH }} 
  dvd_sf_user: ${{ secrets.DVD_SF_USER }}
  dvd_sf_role: ${{ secrets.DVD_SF_ROLE }}
  dvd_sf_account: ${{ secrets.DVD_SF_ACCOUNT }}
  dvd_sf_passphrase: ${{ secrets.DVD_SF_PASSPHRASE }}
  SSH_KEY: ${{ secrets.SSH_KEY }}

jobs:
  sqlfluff-lint-models:
    name: Lint dbt models using SQLFluff
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: "actions/checkout@v3"
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Check out the code of the PR

      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: install requirements
        run: "pip install -r requirements.txt"

      - name: export pk
        run: |
          pwd 
          echo "-----BEGIN ENCRYPTED PRIVATE KEY-----" >> ./rsa_key_david_sf.p8
          echo ${{ secrets.SSH_KEY }} >> ./rsa_key_david_sf.p8 
          echo "-----END ENCRYPTED PRIVATE KEY-----" >> ./rsa_key_david_sf.p8
      - name: dbt test & deps
        run: |
          echo "DBT_PROFILES_DIR=$(pwd)/profiles" >> $GITHUB_ENV
          export DBT_PROFILES_DIR=$(pwd)/profiles
          echo "testing connection"
          dbt debug --target cicd
          echo "installing deps"
          dbt deps
# lifted from dbt_artifacts https://github.com/brooklyn-data/dbt_artifacts/blob/main/.github/workflows/ci_test_package.yml
      - name: Get changed files
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '

      - name: Get new and changed .sql files in /models to lint
        id: get_files_to_lint
        shell: bash -l {0}
        run: |
          # Set the command in the $() brackets as an env variable to use in later steps
          echo "lintees=$(
          # Issue where grep regular expressions don't work as expected on the
          # Github Actions shell, check dbt/models/ folder
          echo \
          $(echo ${{ steps.get_file_changes.outputs.files_modified }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ') \
          $(echo ${{ steps.get_file_changes.outputs.files_added }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ')
          )" >> $GITHUB_OUTPUT
          echo "to be exported"
          echo $GITHUB_OUTPUT
      - name: Lint dbt models
        if: steps.get_files_to_lint.outputs.lintees != ''
        shell: bash -l {0}
        run: |
          mv ./pyproject_toml ./pyproject.toml
          echo "output from prev step"
          echo ${{ steps.get_files_to_lint.outputs.lintees }}
          sqlfluff lint --dialect snowflake --format github-annotation --annotation-level failure --nofail ${{ steps.get_files_to_lint.outputs.lintees }} > annotations.json
          sed -i '/^\[/!d' annotations.json # see https://github.com/sqlfluff/sqlfluff/issues/2244
          echo "what does this json look like"
          ls -la
          cat ./annotations.json
          echo test2
          cat annotations.json
      - name: Annotate
        uses: yuzutech/annotations-action@v0.3.0
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: "SQLFluff Lint"
          input: "./annotations.json"
      - name: say gg
        run: |
          echo "we're done"